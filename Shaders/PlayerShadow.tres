[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://bab5pskukcbnu"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kfubc"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_24hj3"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0.7)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_g14ym"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(6, 2, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_uj32s"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4b37b"]
expanded_output_ports = [0]
input_name = "vertex"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:3
	vec2 n_out3p0 = VERTEX;
	float n_out3p2 = n_out3p0.g;


	vec3 n_out10p0;
// If:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00001;
	vec3 n_in10p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in10p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in10p5 = vec3(6.00000, 2.00000, 0.00000);
	if(abs(n_out3p2 - n_in10p1) < n_in10p2)
	{
		n_out10p0 = n_in10p3;
	}
	else if(n_out3p2 < n_in10p1)
	{
		n_out10p0 = n_in10p5;
	}
	else
	{
		n_out10p0 = n_in10p4;
	}


// VectorOp:11
	vec3 n_out11p0 = n_out10p0 + vec3(n_out3p0, 0.0);


// Output:0
	VERTEX = vec2(n_out11p0.xy);


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// VectorOp:3
	vec4 n_in3p1 = vec4(0.00000, 0.00000, 0.00000, 0.70000);
	vec4 n_out3p0 = n_out2p0 * n_in3p1;
	float n_out3p4 = n_out3p0.a;


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out3p4;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(960, 160)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_4b37b")
nodes/vertex/3/position = Vector2(200, 180)
nodes/vertex/10/node = SubResource("VisualShaderNodeIf_g14ym")
nodes/vertex/10/position = Vector2(460, 0)
nodes/vertex/11/node = SubResource("VisualShaderNodeVectorOp_uj32s")
nodes/vertex/11/position = Vector2(620, 100)
nodes/vertex/connections = PackedInt32Array(10, 0, 11, 0, 3, 0, 11, 1, 3, 2, 10, 0, 11, 0, 0, 0)
nodes/fragment/0/position = Vector2(1140, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_kfubc")
nodes/fragment/2/position = Vector2(240, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_24hj3")
nodes/fragment/3/position = Vector2(640, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0, 3, 4, 0, 1)
nodes/light/0/position = Vector2(1040, 60)
